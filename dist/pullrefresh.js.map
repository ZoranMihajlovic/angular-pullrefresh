{"version":3,"sources":["js/directive.js","js/pullrefresh.js","js/template.js"],"names":["TOUCH_START","TOUCH_MOVE","TOUCH_END","defaults","contentOffset","threshold","resistance","angular","window","require","undefined","pullrefresh","module","directive","$window","$document","transclude","restrict","scope","ptrStyle","hideLoader","pullrefreshElement","pullrefreshTemplate","pullrefreshDisabled","templateUrl","getTemplateUrl","link","linkPullrefreshDirective","elem","attrs","$scope","element","contentStyle","options","pullrefreshContentOffset","pullrefreshThreshold","pullrefreshResistance","ptrEl","body","elements","document","querySelectorAll","length","ptrElClassList","classList","pan","PullRefresh","el","activate","reset","isLoading","pubSub","subscribe","state","refresh","pull","setContentPan","doLoading","doReset","listen","touchStart","touchMove","touchEnd","evt","handler","split","i","toLowerCase","addEventListener","e","t","touches","begin","clientY","move","stopPropagation","end","preventDefault","offset","getContentOffset","loaderOffset","getLoaderOffset","transform","distance","webkitTransform","$apply","querySelector","offsetHeight","add","loadingPromise","$eval","setTimeout","then","remove","elClassRemove","removeEventListener","PubSub","handlers","event","context","push","bind","args","Pan","_options","_distance","_start","_isScrolling","_didMove","_movedBefore","val","pos","Math","round","arguments","_el","_state","resetState","scrollTop","calcDistance","isScrolling","isScrolledToTop","movedBefore","publish","scroll","didMove","run","$templateCache","put"],"mappings":"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","file":"pullrefresh.js","sourcesContent":["(function() {\n  'use strict';\n\n  const TOUCH_START = 'touchstart MSPointerDown pointerdown';\n  const TOUCH_MOVE = 'touchmove MSPointerMove MSPointerHover pointermove';\n  const TOUCH_END = 'touchend touchcancel MSPointerUp MSPointerCancel pointerup pointercancel';\n\n  const defaults = {\n    contentOffset : null,\n    threshold : 70,\n    resistance : 2.5\n  };\n\n  /* istanbul ignore next */\n  let angular = window.angular ?\n    window.angular :\n    'undefined' !== typeof require ?\n      require('angular') :\n      undefined;\n\n  let pullrefresh = angular.module('pullrefresh', []);\n\n\n\n\n  /* @ngInject */\n  pullrefresh.directive('pullrefresh', ['$window', '$document', function($window, $document) {\n\n    return {\n\n      transclude : true,\n\n      restrict: 'EA',\n\n      scope : {\n        // make the internal loader state known to external\n        // components\n        ptrStyle : '=pullrefreshLoaderStyle',\n\n        hideLoader : '=pullrefreshHideLoader',\n\n        // make the callback is evaluated on the parent scope\n        pullrefresh : '&',\n\n        pullrefreshElement: '@',\n\n        // allow users to insert an own template for the loader\n        pullrefreshTemplate: '@',\n\n        // allows to disable the directive. this does only work before the link function was running\n        pullrefreshDisabled: '@'\n      },\n\n      templateUrl: getTemplateUrl,\n\n      link: linkPullrefreshDirective\n\n    };\n\n\n\n\n\n    ///////////////////////////////////////////////////////////\n\n    function getTemplateUrl(elem, attrs) {\n      return attrs.pullrefreshTemplate || 'template/pullrefresh/pullrefresh.html';\n    }\n\n    function linkPullrefreshDirective($scope, element, attrs) {\n\n      if (attrs.pullrefreshDisabled === 'true') {\n        return;\n      }\n\n      $scope.contentStyle = {};\n      $scope.ptrStyle = {};\n\n\n\n      /**\n       * Hold all of the merged parameter and default module options\n       * @type {object}\n       */\n      let options = {\n        contentOffset : attrs.pullrefreshContentOffset || defaults.contentOffset,\n        threshold: attrs.pullrefreshThreshold || defaults.threshold,\n        resistance: attrs.pullrefreshResistance || defaults.resistance || 1\n      };\n\n      /**\n       * Easy shortener for handling adding and removing body classes.\n       */\n      let ptrEl = $document[0].body;\n      if ($scope.pullrefreshElement) {\n        let elements = document.querySelectorAll($scope.pullrefreshElement);\n        if (elements.length > 0) {\n          ptrEl = elements[0];\n        }\n      }\n\n      let ptrElClassList = ptrEl.classList;\n\n      /**\n       * Holds all information about the current pan action\n       */\n      let pan = new $window.PullRefresh({\n        el : ptrEl,\n        threshold : options.threshold,\n        resistance : options.resistance\n      });\n\n\n\n\n      activate();\n\n      ////////////\n\n      function activate() {\n        pan.reset();\n\n        pan.isLoading = false;\n\n        pan.pubSub\n        .subscribe('moved', (pan) => {\n\n          ptrElClassList[pan.state.refresh ? 'add' : 'remove']('ptr-refresh');\n          ptrElClassList[pan.state.pull ? 'add' : 'remove']('ptr-pull');\n\n          setContentPan(pan);\n        });\n\n\n\n        pan.pubSub.subscribe('end', (pan) => {\n          setContentPan(null);\n\n          if (pan.state.refresh) {\n            doLoading(pan);\n          } else {\n            doReset(pan);\n          }\n\n        });\n\n        listen(ptrEl, TOUCH_START, touchStart);\n        listen(ptrEl, TOUCH_MOVE, touchMove);\n        listen(ptrEl, TOUCH_END, touchEnd);\n      }\n\n      function listen(el, evt, handler) {\n\n        evt = evt.split(' ');\n        let i = 0;\n\n        while (evt[i] && !(`on${evt[i].toLowerCase()}` in $window)) {\n          i += 1;\n        }\n\n        if (i < evt.length) {\n          evt = evt[i];\n        }\n\n        el.addEventListener(evt, handler, false);\n\n      }\n\n\n\n      /**\n       * Determine whether pan events should apply based on scroll position on panstart\n       *\n       * @param {object} e - Event object\n       */\n      function touchStart (e) {\n\n        pan.reset();\n\n        if (pan.isLoading) {\n          return;\n        }\n\n        let t = e.touches ? e.touches[0] : e;\n\n        pan.begin(t.clientY);\n\n      }\n\n      /**\n       * Handle element on screen movement when the pandown events is firing.\n       *\n       * @param {object} e - Event object\n       */\n      function touchMove (e) {\n\n        if (pan.isLoading) {\n          return;\n        }\n\n        let t = e.touches ? e.touches[0] : e;\n\n        if (pan.move(t.clientY)) {\n          e.stopPropagation();\n        }\n\n      }\n\n      function touchEnd (e) {\n\n        if (pan.isLoading) {\n          return;\n        }\n\n        if (pan.end()) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n\n      }\n\n\n\n\n\n\n\n\n      /**\n       * Set the CSS transform on the content element to move it on the screen.\n       */\n      function setContentPan (pan) {\n\n        if (pan === null) {\n\n          $scope.contentStyle = {};\n          $scope.ptrStyle = {};\n\n        }\n        else {\n\n          let offset = getContentOffset(options);\n\n          // in case the default loader is being hidden, use the negative\n          // pan distance to keep the loader atop\n          let loaderOffset = getLoaderOffset(pan, offset);\n\n            // Use transforms to smoothly animate elements on desktop and mobile devices\n          $scope.contentStyle = {\n            transform: 'translate3d(0, ' + pan.distance + 'px, 0)',\n            webkitTransform: 'translate3d(0, ' + pan.distance + 'px, 0)'\n          };\n\n          $scope.ptrStyle = {\n            transform: 'translate3d(0, ' + loaderOffset + 'px, 0)',\n            webkitTransform: 'translate3d(0, ' + loaderOffset + 'px, 0)'\n          };\n\n        }\n\n        $scope.$apply();\n      }\n\n\n\n\n      function getContentOffset () {\n        return options.contentOffset !== null ?\n          options.contentOffset :\n          element[0].querySelector('.ptr').offsetHeight;\n      }\n\n      function getLoaderOffset (pan, offset) {\n        return $scope.hideLoader ?\n          (-pan.distance - offset) :\n          pan.distance - offset;\n      }\n\n      /**\n       * Position content and refresh elements to show that loading is taking place.\n       */\n      function doLoading (pan) {\n        pan.isLoading = true;\n        ptrElClassList.add('ptr-loading');\n\n        // If no valid loading function exists, just reset elements\n        if (!$scope.pullrefresh) {\n          return doReset(pan);\n        }\n\n        // The loading function should return a promise\n        let loadingPromise = $scope.$eval($scope.pullrefresh);\n\n        // For UX continuity, make sure we show loading for at least one second before resetting\n        setTimeout(function() {\n\n          if (loadingPromise.then) {\n            // Once actual loading is complete, reset pull to refresh\n            loadingPromise.then(() => doReset(pan));\n          }\n\n        }, 1000);\n      }\n\n      /**\n       * Reset all elements to their starting positions before any paning took place.\n       */\n      function doReset (pan) {\n        ptrElClassList.remove('ptr-loading');\n        ptrElClassList.remove('ptr-refresh');\n        ptrElClassList.add('ptr-reset');\n\n        let elClassRemove = function() {\n          ptrElClassList.remove('ptr-reset');\n          ptrElClassList.remove('ptr-pull');\n\n          pan.el.removeEventListener('transitionend', elClassRemove, false);\n        };\n\n        pan.el.addEventListener('transitionend', elClassRemove, false);\n\n\n        pan.isLoading = false;\n      }\n\n    }\n  }]);\n\n})();\n","(function(window) {\n  'use strict';\n  class PubSub {\n\n    constructor() {\n      this.handlers = [];\n    }\n\n    subscribe(event, handler, context) {\n\n      if (typeof context === 'undefined') {\n        context = handler;\n      }\n\n      this.handlers.push({\n        event: event,\n        handler: handler.bind(context)\n      });\n\n      return this;\n    }\n\n    publish(event, ...args) {\n      let i = 0;\n\n      for (; i < this.handlers.length; i += 1) {\n\n        if (this.handlers[i].event === event) {\n          this.handlers[i].handler(...args);\n        }\n\n      }\n    }\n  }\n\n  class Pan {\n\n    constructor(options = {resistance: 1}) {\n      this._options = options;\n\n      this.reset();\n    }\n\n    get distance() {\n      return this._distance;\n    }\n\n    get isScrolling() {\n      return this._isScrolling;\n    }\n\n    get didMove() {\n      return this._didMove;\n    }\n\n    get movedBefore() {\n      return this._movedBefore;\n    }\n\n    reset() {\n      this._distance = 0;\n      this._start = 0;\n      this._isScrolling = false;\n      this._didMove = false;\n      this._movedBefore = false;\n    }\n\n    begin(val) {\n      this._start = val;\n    }\n\n    calcDistance(pos) {\n      return Math.round((pos - this._start) / this._options.resistance);\n    }\n\n    move(distance) {\n      this._distance = distance;\n      this._didMove = true;\n      this._movedBefore = true;\n      this._isScrolling = false;\n    }\n\n    scroll() {\n      this._isScrolling = true;\n      this._didMove = false;\n    }\n\n  }\n\n  class PullRefresh extends Pan {\n\n    constructor() {\n\n      super(...arguments);\n\n      this._el = this._options.el;\n\n      this._options.threshold = this._options.threshold || 0;\n\n      this._state = {};\n\n      this.pubSub = new PubSub();\n\n    }\n\n    get el() {\n      return this._el;\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    reset() {\n      super.reset();\n      this.resetState();\n    }\n\n    resetState() {\n      this._state = {};\n    }\n\n    isScrolledToTop() {\n      return this._el.scrollTop === 0;\n    }\n\n    move(pos, event) {\n\n      let distance = this.calcDistance(pos);\n\n      if ((!this.isScrolling && this.isScrolledToTop() && distance > 0) || // check if the user pulled down\n        (!this.isScrolling && !this.isScrolledToTop() && distance > 0 && this.movedBefore)) { // check if the user pulls up after pulling down beforehand\n\n        super.move(distance);\n\n        this._state.refresh = this.distance > this._options.threshold;\n        this._state.pull = this.distance > 0;\n\n        this.pubSub.publish('moved', this);\n\n        return true;\n      }\n      else {\n\n        this.scroll();\n\n        return false;\n      }\n\n    }\n\n\n    end() {\n\n      if (this.didMove) {\n\n        this.pubSub.publish('end', this);\n\n        this.reset();\n\n        return true;\n      }\n    }\n\n\n  }\n\n  window.PullRefresh = PullRefresh;\n})(window);","(function() {\n\n  'use strict';\n\n  /* istanbul ignore next */\n  var angular = window.angular ? window.angular : 'undefined' !== typeof require ? require('angular') : undefined;\n\n\n  angular.module('pullrefresh')\n    .run(['$templateCache', function($templateCache) {\n      $templateCache.put('template/pullrefresh/pullrefresh.html',\n        '<div ng-if=\"!hideLoader\" ng-style=\"ptrStyle\" class=\"ptr\">' +\n            '<span class=\"genericon genericon-next\"></span>' +\n\n            '<div class=\"loading\">' +\n                '<span class=\"l1\"></span>' +\n                '<span class=\"l2\"></span>' +\n                '<span class=\"l3\"></span>' +\n            '</div>' +\n        '</div>' +\n\n        '<div ng-style=\"contentStyle\" class=\"ptr-content\">' +\n          //'Pull down to refresh!' +\n          '<div ng-transclude></div>' +\n        '</div>');\n    }]);\n\n})();\n"]}